{
  "rules": {
    "users": {
      ".read": "auth != null",
      ".indexOn": ["username", "email", "communityId"],
      "$uid": {
        ".write": "auth != null && (auth.uid === $uid || !data.exists())",
        ".read": "auth != null",
        ".validate": "newData.hasChildren(['communityId'])"
      }
    },
    "communities": {
      ".read": "auth != null",
      ".indexOn": ["name"],
      ".write": "auth != null",
      "$communityId": {
        ".validate": "newData.hasChildren(['name', 'description', 'createdAt'])"
      }
    },
    "marketItems": {
      ".read": "auth != null",
      ".indexOn": ["communityId", "userId"],
      "$itemId": {
        ".read": "auth != null",
        ".write": "auth != null && (!data.exists() || data.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'description', 'price', 'userId', 'communityId'])",
        "communityId": {
          ".validate": "newData.val() === root.child('users').child(auth.uid).child('communityId').val()"
        }
      }
    },
    "volunteerPosts": {
      ".read": "auth != null",
      ".indexOn": ["communityId", "userId"],
      "$postId": {
        ".write": "auth != null && (!data.exists() || data.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'description', 'userId', 'communityId'])",
        "communityId": {
          ".validate": "newData.val() === root.child('users').child(auth.uid).child('communityId').val()"
        }
      }
    },
    "chats": {
      ".read": "auth != null",
      "$chatId": {
        ".read": "auth != null && (data.child('sellerId').val() === auth.uid || data.child('buyerId').val() === auth.uid)",
        ".write": "auth != null",
        "messages": {
          ".read": "auth != null",
          ".write": "auth != null && root.child('users').child(auth.uid).child('communityId').val() === data.parent().child('communityId').val()",
          "$messageId": {
            ".validate": "newData.hasChildren(['message', 'senderId', 'senderName', 'timestamp'])"
          }
        },
        "readStatus": {
          "$uid": {
            ".read": "auth != null && auth.uid === $uid",
            ".write": "auth != null && auth.uid === $uid",
            ".validate": "newData.isNumber()"
          }
        },
        "communityId": {
          ".validate": "newData.isString() && newData.val() === root.child('users').child(auth.uid).child('communityId').val()"
        }
      }
    }
  }
}
